// 한양대학교 컴퓨터공학과 2013043360 이지은
import java.util.ArrayList;
import java.util.Scanner;

public class ScoreManager {

	ArrayList<Score> u = new ArrayList<Score>(); //경기결과 객체
	Scanner s= new Scanner(System.in);
	
	String teamName[]= new String[4]; //팀이름
	int teamMatch[]= new int[4]; //팀별 경기수
	int teamWin[]= new int[4]; //팀별 승리경기수
	int teamLose[]= new int[4]; //팀별 패배경기수
	int teamTie[]= new int[4]; //팀별 무승부경기수
	int teamPoint[]= new int[4]; //팀별 승점수
	
	int count= 1;
	
	void start() //관리작업 진행
	{
		int menu,t,tnum;
		String tname;
		
		System.out.println("경기에 참여할 4팀을 입력해 주세요.");
		for(int i=0;i<4;i++)
		{
			System.out.printf("Team number %d. ",i);
			teamName[i]= s.nextLine();
		}
		
		while(true)
		{
			System.out.println("================================================================");
			System.out.println("1)경기결과 등록 2)경기결과 수정 3)경기결과 출력 4)경기결과 검색");
			System.out.print("5)경기통계 6)상대전적 7)종료 => ");
			menu=s.nextInt();
			System.out.println("================================================================");
			
			if(menu==7) 
			{
				System.out.println("=> 종료되었습니다.");
				break;
			}
			else if(menu==1) addScore();
			else if(menu==2) modifyScore();
			else if(menu==3) listScores();
			else if(menu==4)
			{
				System.out.println("Team Number로 검색하시려면 1번,");
				System.out.print("Team Name으로 검색하시려면 2번을 입력해 주세요 : ");
				t= s.nextInt();
				if(t==1) 
				{
					while(true)
					{
						System.out.print("Team Number : ");
						tnum= s.nextInt();
						if(tnum<0 || tnum>3) System.out.println("Team Number가 잘못되었습니다. 다시 입력해주세요.");
						else 
						{
							findScores(tnum);
							break;
						}
					}
				}
				else
				{
					s.nextLine();
					while(true)
					{
						System.out.print("Team Name : ");
						tname= s.nextLine();
						tnum= -1;
						for(int i=0;i<4;i++)
						{
							if(tname.equals(teamName[i]))
							{
								tnum= i;
								break;
							}
						}
						if(tnum==-1) System.out.println("Team Name이 잘못되었습니다. 다시 입력해주세요.");
						else
						{
							findScores(tname);
							break;
						}
					}					
				}
				System.out.printf("%d승 %d무 %d패, 승점 %d점\n",teamWin[tnum],teamTie[tnum],teamLose[tnum],teamPoint[tnum]);
		
			}
			else if(menu==5) viewResult();
			else viewMatchScore();
			System.out.println();
		}
	}
	
	void recordMatch(int h, int a, int hs, int as, int c) //추가 : 각 경기당 승점계산 및 경기수 기록, 수정할때 이전의 경기기록 삭제에도 사용
	{
		if(hs> as)
		{
			teamWin[h]+=1*c;
			teamLose[a]+=1*c;
			teamPoint[h]+=3*c;
			
		}
		
		else if(hs< as)
		{
			teamWin[a]+=1*c;
			teamLose[h]+=1*c;
			teamPoint[a]+=3*c;
		}
		
		else
		{
			teamTie[h]+=1*c;
			teamTie[a]+=1*c;
			teamPoint[h]+=1*c;
			teamPoint[a]+=1*c;
		}
		
	}
	
	void addScore() //경기결과등록
	{
		String matchDate;
		int home,away;
		int homeScore,awayScore;
	
		s.nextLine();
		
		System.out.print("경기일자(Match Date) : ");
		matchDate= s.nextLine();
		
		while(true)
		{
			System.out.print("참여 팀(Team Number) : ");
			home= s.nextInt();
			away= s.nextInt();
			if(home<0 || home>3 || away<0 || away>3) System.out.println("Team Number가 잘못되었습니다. 다시 입력해주세요.");
			else if(home==away) System.out.println("같은 팀 끼리는 경기를 하지 않습니다. 다시 입력해주세요.");
			else break;
		}
		
		System.out.print("점수결과(MatchScore) : ");
		homeScore= s.nextInt();
		awayScore= s.nextInt();
		
		u.add(new Score(count,matchDate,teamName[home],teamName[away],home,away,homeScore,awayScore));
		
		count++;
		teamMatch[home]++;
		teamMatch[away]++;
		
		recordMatch(home,away,homeScore,awayScore,1);
		System.out.println("=> 등록되었습니다.");
	}
	
	void modifyScore() //경기결과수정
	{
		int n,hs,as;
		System.out.println();
		while(true)
		{
			System.out.print("수정할 경기번호를 입력해 주세요. ");
			n= s.nextInt();
			if(n<0 || n>u.size()) System.out.println("해당하는 경기번호가 없습니다. 다시 입력해 주세요. ");
			else break;
		}
		
		recordMatch(u.get(n-1).home,u.get(n-1).away,u.get(n-1).homeScore,u.get(n-1).awayScore,-1);
		
		System.out.print("점수결과(MatchScore) : ");
		hs= s.nextInt();
		as= s.nextInt();
		
		u.get(n-1).setScore(hs,as);
		
		recordMatch(u.get(n-1).home,u.get(n-1).away,hs,as,1);
		System.out.println("=> 수정되었습니다.");
		System.out.println();
		listScores();
	}
	
	void listScores() //등록된 모든 경기결과출력
	{
		System.out.printf("%-5s %-15s %-15s %-11s %-15s\n","No.","Match Date","Home team","Score","Away team\n");
		for(int i=0;i<u.size();i++)
		{
			u.get(i).print();
		}
	}
	
	void findScores(int no) //경기결과검색 - 팀번호
	{
		System.out.println();
		System.out.printf("%-5s %-15s %-15s %-11s %-15s\n","No.","Match Date","Home team","Score","Away team\n");
		for(int i=0;i<u.size();i++)
		{
			if(u.get(i).home==no || u.get(i).away==no) u.get(i).print();
		}
	}
	
	void findScores(String name) //경기결과검색 - 팀이름
	{
		System.out.println();
		System.out.printf("%-5s %-15s %-15s %-11s %-15s\n","No.","Match Date","Home team","Score","Away team\n");
		for(int i=0;i<u.size();i++)
		{
			if(u.get(i).homeTeamName.equals(name) || u.get(i).awayTeamName.equals(name)) u.get(i).print();
		}
	}
	
	void viewResult() //경기통계
	{
		int max= -1,maxTeam=0;
		for(int i=0;i<4;i++)
		{
			System.out.printf("%-15s : %d승 %d무 %d패, 승점 %d점\n",teamName[i],teamWin[i],teamTie[i],teamLose[i],teamPoint[i]);
			if(max< teamPoint[i])
			{
				max= teamPoint[i];
				maxTeam= i;
			}
		}
		System.out.println();
		System.out.printf("승점이 가장 높은 팀은 %s 입니다.\n",teamName[maxTeam]);
	}
	
	void viewMatchScore() //상대전적
	{
		int t1,t2,c=0;
		int w=0, l=0, t=0;
		int sco[]= new int[2];
	
		while(true)
		{
			System.out.println("상대전적을 비교하고 싶은 팀 2개를 입력해 주세요(Team Number) : ");
			t1= s.nextInt();
			t2= s.nextInt();
			if(t1<0 || t1>3 || t2<0 || t2>3) System.out.println("Team Number가 잘못되었습니다. 다시 입력해주세요.");
			else if(t1==t2) System.out.println("같은 팀 끼리는 경기를 하지 않습니다. 다시 입력해주세요.");
			else break;	
		}
		//score[0]= t1점수 score[1]= t2점수
		
		for(int i=0;i<u.size();i++)
		{
			if(u.get(i).home== t1 && u.get(i).away== t2)
			{
				sco[0]= u.get(i).homeScore;
				sco[1]= u.get(i).awayScore;
				c=1;
			}
			if(u.get(i).home== t2 && u.get(i).away== t1)
			{
				sco[0]= u.get(i).awayScore;
				sco[1]= u.get(i).homeScore;
				c=1;
			}
			
			if(c==1) //두팀이 경기했다면
			{
				if(sco[0]== sco[1]) t++;
				else
				{
					if(sco[0]> sco[1]) w++;
					else l++;
				}
				c=0;
			}
		}
		System.out.printf("%s의 %s 상대전적 - %d승 %d무 %d패\n",teamName[t1],teamName[t2],w,t,l);
		System.out.printf("%s의 %s 상대전적 - %d승 %d무 %d패\n",teamName[t2],teamName[t1],l,t,w);
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ScoreManager sm= new ScoreManager();
		sm.start();
	}
}
